{"version":3,"sources":["webpack:///./src/components/Tag/tagFilter.js","webpack:///./src/templates/tag.js"],"names":["tagFilter","_ref","children","react_default","a","createElement","className","styles","tagFilterLabel","tagButton","tagButtonFilter","clickAction","navigate","__webpack_require__","d","__webpack_exports__","query","data","Layout","Tag_tagFilter","tagListJson","slug","termsList","termsData","allMarkdownRemark","edges"],"mappings":"2KAuBeA,EAlBG,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACnB,OAAIA,QAAoD,KAGtDC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOP,WACrBG,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAOC,gBAAxB,gBAEEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEH,UAAWC,IAAOG,gBAClBC,YAAa,kBAAMC,YAAS,OAE3BV,MChBXW,EAAAC,EAAAC,EAAA,0BAAAC,IAMeD,EAAA,iBAAAd,GAAc,IAAXgB,EAAWhB,EAAXgB,KAChB,OACEd,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACEf,EAAAC,EAAAC,cAACc,EAAD,KAAYF,EAAKG,YAAYC,MAC7BlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAWC,UAAWN,EAAKO,kBAAkBC,UAJpC,IASFT,EAAK","file":"component---src-templates-tag-js-fb76225c5da91792d451.js","sourcesContent":["import React from 'react'\nimport styles from './tagButton.module.css'\nimport TagButton from './tagButton'\nimport { navigate } from 'gatsby'\n\nconst tagFilter = ({ children }) => {\n  if (children === undefined || children === null) return null\n\n  return (\n    <div className={styles.tagFilter}>\n      <span className={styles.tagFilterLabel}>\n        Filtering by:\n        <TagButton\n          className={styles.tagButtonFilter}\n          clickAction={() => navigate('/')}\n        >\n          {children}\n        </TagButton>\n      </span>\n    </div>\n  )\n}\n\nexport default tagFilter\n","import React from 'react'\nimport Layout from '../components/Layout'\nimport TermsList from '../layouts/GlossaryTerms/termsList'\nimport TagFilter from '../components/Tag/tagFilter'\nimport { graphql } from 'gatsby'\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n      <TagFilter>{data.tagListJson.slug}</TagFilter>\n      <TermsList termsData={data.allMarkdownRemark.edges} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    allMarkdownRemark(filter: { frontmatter: { tags: { in: [$slug] } } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            wordClasses\n            tags\n            synonyms\n            relatedTerms\n          }\n          html\n          id\n        }\n      }\n    }\n    tagListJson(slug: { eq: $slug }) {\n      slug\n    }\n  }\n`\n"],"sourceRoot":""}