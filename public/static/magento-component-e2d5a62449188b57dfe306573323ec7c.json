{
    "title": "Magento component",
    "types": [
        "glossary",
        "usage"
    ],
    "formTypes": [
        {
            "form": "Magento component",
            "wordClasses": [
                "n"
            ]
        }
    ],
    "synonyms": [
        "component"
    ],
    "primarySource": "DevDocs",
    "contentTags": [
        "Magento Software"
    ],
    "userTags": [
        "Internal",
        "Developer"
    ],
    "shortDefinition": "Used to refer to a module, theme, or language package in Magento.",
    "usage": "The term \"component\" should not be used in a general sense; if it is not a module, theme, or language package then the term must be qualified to distinguish it from the \"core\" Magento components. \n\nExample: When discussing the Javascript classes and objects used to add or customize UI elements, use the term \"UI components,\" and never simply “components.”\n\nMore guidelines:\n\n• Should be referenced as Magento component unless the context is already clear.\n• Although you don't have to package it using Composer, it's implied that you do. In others, make clear when you're not discussing a component as a Composer package.\n• To be picky, a component does not have to be delivered by Magento Marketplace. You can install a component from packagist. To make it completely clear, recommend component for non-Marketplace delivery and extension for Marketplace delivery. Also, we use the term “extension” for a module that is sold on Marketplace. But “non-Marketplace delivery” is either a module, a theme, or a language package (i.e, a component).\n• Is not a third-party library. A third-party library is not Magento-specific. You should refer to them by the name from packageist or however the vendor refers to it.",
    "referenceLinks": [
        "UI component"
    ]
}